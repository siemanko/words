<html>

  <head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
  </head>

  <body>


    <link href="css/lite.css" rel="stylesheet" type="text/css" title="s1" id="s1" />

    <nav class="navbar navbar-default navbar-fixed-top">
      <div class="navbar-header">
        <a href="https://takartak.github.io/kodewords/"><span class="navbar-brand"><b>KODE</b>WORDS&nbsp;<small class="hidden-xs hidden-sm">double click them</small></span></a>
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#menu" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
      </div>
      <div class="collapse navbar-collapse" id="menu">
        <ul class="nav navbar-nav">

          <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">New Game<span class="caret"></span></a>
            <ul class="dropdown-menu">
              <li><a href="#" class="reset-button" data-language="en">English</a></li>
              <li role="separator" class="divider"></li>
              <li><a href="#" class="reset-button" data-language="pl">Polish</a></li>
              <li role="separator" class="divider"></li>
              <li><a href="#" class="reset-button" data-language="el">Greek</a></li>
              <li role="separator" class="divider"></li>
              <li><a href="#" class="reset-button" data-language="ppl">People</a></li>
            </ul>
          </li>


          <li id="spymaster-li" data-toggle="tooltip" data-placement="bottom" title="Display the colors of all tiles.">
            <a href="#" id="spymaster">Spymaster View</a>
          </li>


          <li><span>Skin:
						<select id="mySelect">
<option value="css/lite.css">Lite</option>
  <option value="css/style.css">Spy Game</option>
  <option value="css/horror.css">Horror</option>

</select></span>
          </li>
          <li><a href="https://en.wikipedia.org/wiki/Codenames_(board_game)" target="_blank">Rules</a></li>
          <li><a href="https://github.com/takartak/kodewords/">Source</a></li>
        </ul>

        <form class="navbar-form navbar-right" style="margin-right:10px;">
          <div class="form-group" data-toggle="tooltip" data-placement="bottom" title="Type this on a different device to get the same game">
            <input type="text" class="form-control" id="seed" placeholder="seed">
          </div>
        </form>
        <p class="navbar-text navbar-right remaining red" data-toggle="tooltip" data-placement="bottom" title="Number of red tiles that weren't discovered yet.">
          RED: <span id="red-left"></span>
        </p>
        <p class="navbar-text navbar-right remaining blue" data-toggle="tooltip" data-placement="bottom" title="Number of blue tiles that weren't discovered yet.">
          BLUE: <span id="blue-left"></span>
        </p>
      </div>
    </nav>

    <div class="container">
      <div id="game">
      </div>
    </div>
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/seedrandom/2.4.3/seedrandom.min.js" integrity="sha256-64f1BOntWrbWIG++Jw3Ad4BSjTz8FG2DLeZ0kD3lLcc=" crossorigin="anonymous"></script>
    <script>
      var game = {};
      game.num_rows = 5;
      game.num_cols = 5;
      game.words = [];
      game.revealed = [];
      game.allrevealed = false;
      game.type = []
      game.error = null;

      var random_comparer = function(a, b) {
        return 2 * Math.random() - 1;
      }
      var polish_words = ["afryka", "amazonka", "ambasada", "ambulans", "ameryka", "anglia", "anioΕ‚", "antarktyka", "atlantyda", "australia", "awaria", "aztek", "babka", "bal", "bank", "bar", "basen", "baweΕ‚na", "baΕ‚wan", "beczka", "belka", "berlin", "bermudy", "bicz", "blok", "bomba", "budowa", "but", "butelka", "bΔ…k", "cebula", "centaur", "centrum", "chiny", "chochlik", "choroba", "ciaΕ‚o", "cieΕ„", "czapa", "czar", "czas", "czekolada", "czujka", "dania", "diament", "dinozaur", "dno", "doktor", "donice", "drzewo", "duch", "dusza", "dwΓ³r", "dywan", "dzieΕ„", "dziobak", "dziura", "dziΔ™cioΕ‚", "dzwon", "egipt", "ekran", "europa", "fala", "fartuch", "feniks", "figura", "film", "flet", "foka", "francja", "francuz", "funt", "gaz", "geniusz", "gigant", "gnat", "gniazdko", "golf", "gotyk", "goΕ‚Δ…b", "gra", "grabarz", "gracja", "grecja", "groszek", "grzmot", "grzyb", "guma", "guzik", "gwiazda", "gΓ³ra", "gΕ‚adki", "gΕ‚owa", "hak", "helikopter", "himalaje", "holender", "hollywood", "hotel", "humor", "igΕ‚a", "jabΕ‚ko", "jagoda", "jaja", "jatka", "jednoroΕΌec", "jowisz", "jΔ™zyk", "kaczor", "kalosz", "kamieΕ„", "kangur", "kaptur", "karawan", "kasa", "kasyno", "kciuk", "keczup", "kiwi", "klamka", "klatka", "klawisz", "klucz", "kod", "kolec", "komΓ³rka", "konar", "koncert", "kontakt", "kontrakt", "korona", "korzenie", "kostium", "kot", "kozioΕ‚", "koΕ‚o", "koΕ„", "koΕ›ciΓ³Ε‚", "koΕ›Δ‡", "krakΓ³w", "krasnal", "krata", "kret", "kropka", "krzesΕ‚o", "krzyΕΌ", "krΓ³l", "krΓ³lik", "krΓ³lowa", "krΓ³wka", "krΔ™gi", "ksiΔ™ΕΌniczka", "ksiΔ™ΕΌyc", "kucharz", "kwadrat", "lakier", "las", "laser", "laska", "lew", "limuzyna", "lina", "lina", "lis", "loch ness", "lody", "londyn", "lot", "lud", "maj", "maks", "mamut", "marchew", "masa", "materiaΕ‚", "meksyk", "merkury", "miedΕΊ", "mikroskop", "milioner", "mistrz", "miΓ³d", "model", "moskwa", "most", "mucha", "mur", "muszla", "mysz", "napad", "nauczyciel", "naukowiec", "nektar", "niebo", "niedΕΊwiedΕΊ", "niemcy", "ninja", "niΔ‡", "noc", "noga", "nora", "nos", "nowy jork", "nurek", "nΓ³ΕΌ", "obcy", "obsada", "ogier", "ogieΕ„", "ogon", "oko", "olej", "olimp", "oliwa", "opera", "opoka", "organy", "orzech", "orzeΕ‚", "oΕ›miornica", "pajΔ…k", "paleta", "paluszki", "pan", "papier", "pas", "pasta", "pazur", "pekin", "perΕ‚a", "pielΔ™gniarka", "pierΕ›cieΕ„", "pies", "pilot", "pingwin", "piramida", "pirat", "pistolet", "placek", "plastik", "plaΕΌa", "plik", "pochodnia", "pociecha", "pociΔ…g", "poczta", "podkowa", "podkΕ‚ad", "pojazd", "pokrywka", "pole", "policja", "polska", "port", "powietrze", "poΕ‚Δ…czenie", "praca", "prawnik", "prawo", "promieΕ„", "przewodnik", "pudΕ‚o", "punkt", "pupil", "pustka", "pΓ³Ε‚noc", "pΕ‚ot", "pΕ‚yta", "rak", "rakieta", "rama", "rekin", "rewolucja", "robak", "robot", "ruda", "rura", "ryba", "rycerz", "rzut", "rzym", "rzΔ…d", "rzΔ™sa", "rΓ³g", "rΓ³ΕΌa", "rΔ™ka", "rΔ™kawica", "samochΓ³d", "samolot", "satelita", "saturn", "serce", "siano", "siekacz", "sieΔ‡", "silnik", "siΕ‚a", "skorpion", "skorupa", "smok", "soczewka", "sokΓ³Ε‚", "spadek", "spadochron", "splot", "stadion", "stan", "statek", "stopa", "stopieΕ„", "stoΕ‚ek", "strona", "strumieΕ„", "strzaΕ‚", "stΓ³Ε‚", "sukienka", "superbohater", "szafa", "szczyt", "szczΔ™Ε›cie", "szekspir", "szkocja", "szkoΕ‚a", "szkΕ‚o", "szmugiel", "sznur", "szpieg", "szpilka", "szpital", "sztuka", "sΕ‚up", "tablica", "talerz", "talia", "taniec", "tchΓ³rz", "teatr", "teleskop", "toaleta", "tokio", "torebka", "trawa", "trucizna", "truteΕ„", "trΓ³jkΔ…t", "trΔ…ba", "tuba", "tusz", "tusza", "ucho", "usta", "wachlarz", "waga", "waszyngton", "wiatr", "widelec", "wiedΕΊma", "wieloryb", "wieΕΌa", "wieΕΌowiec", "wiosna", "wkΕ‚ad", "woda", "wojna", "wstΔ™p", "wybuch", "wydech", "wΔ…ΕΌ", "zamek", "zebra", "zespΓ³Ε‚", "zieleΕ„", "ziemia", "zmiana", "zmywacz", "znak", "zwoje", "zΔ…b", "zΕ‚odziej", "zΕ‚oto", "Ε‚awa", "Ε‚oΕΌysko", "Ε‚uk", "Ε‚Γ³dΕΊ", "Ε›limak", "Ε›mierΔ‡", "Ε›nieg", "Ε›wierszcz", "Ε›winia", "ΕΌabka", "ΕΌebro", "ΕΌelazo", "ΕΌoΕ‚nierz", "ΕΌubr", "ΕΌuk", "ΕΌuraw", "ΕΌycie"];
      var english_words = ["africa", "agent", "air", "alien", "alps", "amazon", "ambulance", "america", "angel", "antarctica", "apple", "arm", "atlantis", "australia", "aztec", "back", "ball", "band", "bank", "bar", "bark", "bat", "battery", "beach", "bear", "beat", "bed", "beijing", "bell", "belt", "berlin", "bermuda", "berry", "bill", "block", "board", "bolt", "bomb", "bond", "boom", "boot", "bottle", "bow", "box", "bridge", "brush", "buck", "buffalo", "bug", "bugle", "button", "calf", "canada", "cap", "capital", "car", "card", "carrot", "casino", "cast", "cat", "cell", "centaur", "center", "chair", "change", "charge", "check", "chest", "chick", "china", "chocolate", "church", "circle", "cliff", "cloak", "club", "code", "cold", "comic", "compound", "concert", "conductor", "contract", "cook", "copper", "cotton", "court", "cover", "crane", "crash", "cricket", "cross", "crown", "cycle", "czech", "dance", "date", "day", "death", "deck", "degree", "diamond", "dice", "dinosaur", "disease", "doctor", "dog", "draft", "dragon", "dress", "drill", "drop", "duck", "dwarf", "eagle", "egypt", "embassy", "engine", "england", "europe", "eye", "face", "fair", "fall", "fan", "fence", "field", "fighter", "figure", "file", "film", "fire", "fish", "flute", "fly", "foot", "force", "forest", "fork", "france", "game", "gas", "genious", "germany", "ghost", "giant", "glass", "glove", "gold", "grace", "grass", "greece", "green", "ground", "ham", "hand", "hawk", "head", "heart", "helicopter", "himalayas", "hole", "hollywood", "honey", "hood", "hook", "horn", "horse", "horseshoe", "hospital", "hotel", "ice", "ice cream", "india", "iron", "ivory", "jack", "jam", "jet", "jupiter", "kangaroo", "ketchup", "key", "kid", "king", "kiwi", "knife", "knight", "lab", "lap", "laser", "lawyer", "lead", "lemon", "leprechaun", "life", "light", "limousine", "line", "link", "lion", "litter", "loch ness", "lock", "log", "london", "luck", "mail", "mammoth", "maple", "marble", "march", "mass", "match", "mercury", "mexico", "microscope", "millionarie", "mine", "mint", "missile", "model", "mole", "moon", "moscow", "mount", "mouse", "mouth", "mug", "nail", "needle", "net", "new york", "night", "ninja", "note", "novel", "nurse", "nut", "octopus", "oil", "olive", "olympus", "opera", "orange", "organ", "palm", "pan", "pants", "paper", "parachute", "park", "part", "pass", "paste", "penguin", "pheonix", "piano", "pie", "pilot", "pin", "pipe", "pirate", "pistol", "pit", "pitch", "plane", "plastic", "plate", "platypus", "play", "plot", "point", "poison", "pole", "police", "pool", "port", "post", "pound", "press", "princess", "pumpkin", "pupil", "pyramid", "queen", "rabbit", "racket", "ray", "revolution", "ring", "robin", "robot", "rock", "rome", "root", "rose", "roulette", "round", "row", "ruler", "satellite", "saturn", "scale", "school", "scientist", "scorpion", "screen", "scuba diver", "seal", "server", "shadow", "shakespeare", "shark", "ship", "shoe", "shop", "shot", "sink", "skyscraper", "slip", "slug", "smuggler", "snow", "snowman", "sock", "soldier", "soul", "sound", "space", "spell", "spider", "spike", "spine", "spot", "spring", "spy", "square", "stadium", "staff", "star", "state", "stick", "stock", "straw", "stream", "strike", "string", "sub", "suit", "superhero", "swing", "switch", "table", "tablet", "tag", "tail", "tap", "teacher", "telescope", "temple", "theater", "thief", "thumb", "tick", "tie", "time", "tokyo", "tooth", "torch", "tower", "track", "train", "triangle", "trip", "trunk", "tube", "turkey", "undertaker", "unicorn", "vacuum", "van", "vet", "wake", "wall", "war", "washer", "washington", "watch", "water", "wave", "web", "well", "whale", "whip", "wind", "witch", "worm", "yard"];
      var greek_words = ["Ξ§ΟΞ»Ο…Ξ³ΞΏΟ…Ξ½Ο„", "ΞΞΈΟΞ½Ξ·", "Ξ Ξ±Ξ―Ξ¶Ο‰", "ΞΞ¬ΟΞΌΞ±ΟΞΏ", "Ξ”ΞµΞΉΞ½ΟΟƒΞ±Ο…ΟΞΏΟ‚", "Ξ“Ξ¬Ο„Ξ±", "Ξ Ξ―ΟƒΟƒΞ±", "Ξ”ΞµΟƒΞΌΟΟ‚", "Ξ•Ξ»Ξ»Ξ¬Ξ΄Ξ±", "ΞΞ±Ο„Ξ¬ΟƒΟ„ΟΟ‰ΞΌΞ±", "Ξ‘ΞΊΞ―Ξ΄Ξ±", "ΞΞ­Ξ½Ο„ΟΞΏ", "ΞΞµΞ½Ο", "ΞΞΏΞ½ΟΞΊΞµΟΞΏΟ‚", "ΞΞµΞΊΟΞΏΞΈΞ¬Ο†Ο„Ξ·Ο‚", "ΞΞ¬Ξ»Ο„ΟƒΞ±", "Ξ›ΞΏΟ‡ ΞΞµΟ‚", "Ξ‘Ξ»ΞΏΞ³ΞΏ", "Ξ’ΞµΟΞΏΞ»Ξ―Ξ½ΞΏ", "Ξ Ξ»Ξ±Ο„ΟΟ€ΞΏΟ…Ο‚", "Ξ›ΞΉΞΌΞ¬Ξ½ΞΉ", "Ξ£Ο„Ξ®ΞΈΞΏΟ‚", "ΞΞΏΟ…Ο„Ξ―", "Ξ§Ξ·ΞΌΞΉΞΊΞ® Ξ­Ξ½Ο‰ΟƒΞ·", "Ξ Ξ»ΞΏΞ―ΞΏ", "Ξ΅ΞΏΞ»ΟΞΉ", "Ξ§ΟΟΞΏΟ‚", "Ξ¦Ξ»Ξ¬ΞΏΟ…Ο„ΞΏ", "Ξ ΟΟΞ³ΞΏΟ‚", "ΞΞ¬Ξ½Ξ±Ο„ΞΏΟ‚", "ΞΞ±Ξ»Ξ¬", "Ξ•ΞΊΞΈΞµΟƒΞ·", "Ξ”ΟΞ½Ο„ΞΉ", "Ξ ΟΞΏΟƒΟ‰Ο€ΞΉΞΊΟ", "ΞΞΏΞΌΞΏΟƒΟ‡Ξ­Ξ΄ΞΉΞΏ", "Ξ’ΞΏΞ»Ξ®", "Ξ’Ξ±ΟƒΞΉΞ»ΞΉΞ¬Ο‚", "Ξ¤Ξ·Ξ³Ξ¬Ξ½ΞΉ", "Ο„ΞµΟ„ΟΞ¬Ξ³Ο‰Ξ½ΞΏ", "Ξ’ΞΏΟ…Ξ²Ξ¬Ξ»ΞΉ", "Ξ•Ο€ΞΉΟƒΟ„Ξ®ΞΌΞΏΞ½Ξ±Ο‚", "ΞΞµΞΏΟƒΟƒΟΟ‚", "Ξ‘Ο„Ξ»Ξ±Ξ½Ο„Ξ―Ξ΄Ξ±", "ΞΞ±Ο„Ξ¬ΟƒΞΊΞΏΟ€ΞΏΟ‚", "Ξ¤Ξ±Ο‡Ο…Ξ΄ΟΞΏΞΌΞµΞ―ΞΏ", "ΞΞ±ΟΟ€ΟΟ‚", "ΞΞΏΟΟ„ΟƒΞΏΟ…ΟΞΏ", "Ξ ΞµΞΉΟΞ±Ο„Ξ®Ο‚", "Ξ ΟΟΟƒΟ‰Ο€ΞΏ", "Ξ΅Ξ±Ξ²Ξ΄Ξ―", "ΞΟΟƒΞΏΟ‚", "Ξ‘Ο…Ξ»Ξ®", "Ξ’ΞΏΟ…Ξ½Ο", "Ξ“Ο…ΞΌΞ½ΞΏΟƒΞ¬Ξ»ΞΉΞ±Ξ³ΞΊΞ±Ο‚", "Ξ–Ξ¬ΟΞΉΞ±", "ΞΞ΄Ξ·Ξ³Ο‰", "Ξ‘Ξ³ΞΊΞΉΟƒΟ„ΟΞΏ", "ΞΞ±ΟΟΟ„ΞΏ", "Ξ”Ξ·Ξ»Ξ·Ο„Ξ®ΟΞΉΞΏ", "Ξ£Ο„ΞΏΞΊ", "Ξ ΟΞ΄ΞΉ", "Ξ”Ξ¬Ξ΄Ξ±", "ΞΟ€ΟΞ¬Ο„ΟƒΞΏ", "Ξ¦ΞΉΞ³ΞΏΟΟΞ±", "ΞΟΟ…Ο‡ΞµΞ―ΞΏ", "ΞΞΏΟƒΟ„ΞΏΟΞΌΞΉ", "Ξ“ΞµΟΞ±Ξ½ΟΟ‚", "Ξ ΞµΞΊΞ―Ξ½ΞΏ", "ΞΞ¬Ξ¶Ξ±", "ΞΞΉΞΊΟΞΏΟƒΞΊΟΟ€ΞΉΞΏ", "ΞΞΉΞ½Ξ·Ο„Ξ®ΟΞ±Ο‚", "ΞΞ―Ξ½Ξ±", "Ξ‘Ο‡Ο…ΟΞΏ", "Ξ Ξ±Ξ½Ο„ΞµΞ»ΟΞ½ΞΉ", "Ξ•Ο…ΟΟΟ€Ξ·", "ΞΟ€ΟΟ„Ξ±", "Ξ ΟΞΉΞ³ΞΊΞ―Ο€ΞΉΟƒΟƒΞ±", "Ξ£ΟΞ½Ξ΄ΞµΟƒΞΌΞΏΟ‚", "Ξ¤Ο…Ο‡Ξ·", "Ξ•Ξ»ΞΉΞ¬", "Ξ Ξ±Ξ»Ξ¬ΞΌΞ·", "Ξ”Ξ¬ΟƒΞΊΞ±Ξ»ΞΏΟ‚", "Ξ‘Ξ½Ο„Ξ―Ο‡ΞµΞΉΟΞ±Ο‚", "Ξ§Ο„Ξ±Ο€ΟΞ΄ΞΉ", "ΞΊΞΏΟ…ΞΊΞΏΟΞ»Ξ±", "Ξ“ΟΞ±Ξ²Ξ¬Ο„Ξ±", "Ξ“ΞΉΞ±Ο„ΟΟΟ‚", "Ξ™Ο‡Ξ½Ξ·", "ΞΟΞ―ΞΊΞµΟ„", "Millionarie", "ΞΞ­Ξ± Ξ¥ΟΟΞΊΞ·", "ΞΊΞ±Ο„Ξ¬ΟƒΟ„Ξ±ΟƒΞ·", "Ξ’ΞµΟΞΌΞΏΟΞ΄Ξ±", "Ξ Ξ¬ΟΞΊΞΏ", "Ξ¤ΞΏΟ…ΟΞΊΞ―Ξ±", "Ξ£ΞΏΞΊΞΏΞ»Ξ¬Ο„Ξ±", "Ξ¤Ξ±ΞΎΞ―Ξ΄ΞΉ", "Ξ΅Ξ±ΞΊΞ­Ο„Ξ±", "ΞΟ…Ο‡Ο„ΞµΟΞ―Ξ΄Ξ±", "Ξ Ξ―Ξ΄Ξ±ΞΊΞ±Ο‚", "Ξ£Ξ±Ξ―ΞΎΟ€Ξ·Ο", "ΞΟ€ΞΏΟ…Ξ»ΟΞ½ΞΉ", "Ξ”ΞΉΞ±ΞΊΟΟ€Ο„Ξ·Ο‚", "Ξ¤ΞµΞ―Ο‡ΞΏΟ‚", "Ξ¨Ο…Ο‡Ξ®", "Ξ¦Ξ¬Ξ½Ο„Ξ±ΟƒΞΌΞ±", "Ο‡ΟΟΞ½ΞΏΟ‚", "Ξ§ΞΏΟΟΟ‚", "Ξ‘ΞΌΞ±Ξ¶ΟΞ½Ξ±", "Ξ§Ξ¬ΟΞ·", "ΞΟΟƒΟ‡Ξ±", "ΞΞΏΞ»ΞΏΞΊΟΞΈΞΉ", "Ξ‘Ξ½Ο„Ξ±ΟΞΊΟ„ΞΉΞΊΞ®", "ΞΞ±ΟƒΟ„Ξ―Ξ³ΞΉΞΏ", "ΞΞ±ΟΞ΄ΞΉΞ¬", "Ξ¤ΟΞ±Ο€Ξ­Ξ¶ΞΉ", "ΞΟ€Ξ¬Ξ»Ξ±", "ΞΞ±Ο‡Ξ·Ο„Ξ®Ο‚", "ΞΟΟΞΏ", "Ξ—ΞΌΞ­ΟΞ±", "Ξ‘Ξ½ΞΏΞΉΞΎΞ·", "Ξ‘Ξ³ΟΞ½Ξ±Ο‚", "Ξ”ΞΉΞ±ΞΌΞ¬Ξ½Ο„ΞΉ", "ΞΞ­Ξ½Ο„Ξ±Ο…ΟΞΏΟ‚", "ΞΞ¬ΟΟ„ΞΉΞΏΟ‚", "Ξ΅ΞΏΟ…Ξ»Ξ­Ο„Ξ±", "Ξ£ΞΊΟΞ»ΞΏΟ‚", "Ξ”ΞΉΞ±ΟƒΟ‡Ξ―Ξ¶Ο‰", "ΞΟΞΌΞ±", "Ξ Ξ¬Ο€ΞΉΞ±", "Ξ‘Ξ½ΞµΞΌΞΏΟ‚", "Ξ£Ξ·ΞΌΞµΞ―ΞΏ", "ΞΟ…ΟΞ±Ξ½ΞΏΞΎΟΟƒΟ„Ξ·Ο‚", "Ξ§Ξ±ΟΟ„Ξ―", "ΞΌΞ®Ξ»ΞΏ", "Ξ›Ξ¬Ξ΄ΞΉ", "ΞΞ¬Ξ³ΞµΞΉΟΞ±Ο‚", "Ξ ΞµΟ„Ο", "Ξ•ΞΊΞΌΞ±Ξ³ΞµΞ―ΞΏ", "Ξ‘ΟΞΊΞΏΟΞ΄Ξ±", "ΞΞ±ΟΟ†Ξ―Ο„ΟƒΞ±", "ΞΞ»Ξ­Ο†Ο„Ξ·Ο‚", "ΞΞΏΟΞΌΟΟ‚", "Ξ‘ΞΌΞµΟΞΉΞΊΞ®", "ΞΟ…ΞΈΞΉΟƒΟ„ΟΟΞ·ΞΌΞ±", "ΞΟΟ„Ο„Ξ±ΟΞΏ", "Ξ¤ΟΞΎΞΏ", "ΞΞΏΞ½Ο„Ξ­Ξ»ΞΏ", "ΞΞ±Ο‡Ξ±Ξ―ΟΞΉ", "ΞΉΟ€Ο€ΟΟ„Ξ·Ο‚", "Ξ”ΞΉΞΊΞ±ΟƒΟ„Ξ®ΟΞΉΞΏ", "Ξ£Ξ―Ξ΄ΞµΟΞΏ", "Ξ¦Ξ¬Ξ»Ξ±ΞΉΞ½Ξ±", "Ξ£ΞΊΞΉΞ¬", "Ξ£ΟΞΌΞ²Ξ±ΟƒΞ·", "Ξ•ΟΞΌΞ®Ο‚", "Ξ‘Ξ³Ο‰Ξ³ΟΟ‚", "Ξ£Ο†ΟΞ±Ξ³Ξ―Ξ΄Ξ±", "Ξ‘Ο…Ο„ΞΏΞΊΞ―Ξ½Ξ·Ο„ΞΏ", "Ξ”Ξ±Ο‡Ο„Ο…Ξ»Ξ―Ξ΄ΞΉ", "Ξ Ξ±ΞΉΞ΄Ξ―", "Ξ ΞΉΞ¬Ξ½ΞΏ", "Ξ›Ξ­ΞΉΞ¶ΞµΟ", "Ξ—ΜΟ‡ΞΏΟ‚", "Ξ ΟΞ»ΞΏΟ‚", "Ξ¥Ο€ΞµΟΞ®ΟΟ‰Ξ±Ο‚", "Ξ•Ο€Ξ±Ξ½Ξ¬ΟƒΟ„Ξ±ΟƒΞ·", "Ξ›Ξ¬ΞΊΞΊΞΏΟ‚", "Ξ‘Ξ­ΟΞΉΞΏ", "Ξ ΞΏΟ„Ξ®ΟΞΉ", "Ξ’Ξ¬ΟƒΞΉΞ³ΞΊΟ„Ο‰Ξ½", "Ξ¦Ξ»ΞΏΞΉΟΟ‚", "Ξ§ΞΉΟΞ½ΞΉ", "Ξ•Ξ»ΞµΟ†Ξ±Ξ½Ο„ΟΞ΄ΞΏΞ½Ο„ΞΏ", "Ξ£Ο‰Ξ»Ξ®Ξ½Ξ±Ο‚", "ΞΞ¬Ξ»Ο…ΞΌΞΌΞ±", "Ξ’Ξ±ΞΈΞΌΟΟ‚", "Ξ¤ΟΞΊΞΉΞΏ", "Ξ•ΞΊΞΊΞ»Ξ·ΟƒΞ―Ξ±", "Ξ Ξ―Ο„Ξ±", "Ξ£Ο‰Ξ»Ξ®Ξ½Ξ±Ο‚", "Ξ¤ΞµΟ„ΟΞ¬Ξ³Ο‰Ξ½ΞΏ", "ΞΟΞΌΞΉΞΊΟ‚", "Ξ¨Ξ¬ΟΞΉ", "Ξ“Ξ­Ο†Ο…ΟΞ±", "Ξ¦ΞµΞ³Ξ³Ξ¬ΟΞΉ", "ΞΞ­ΟΞΏΟ‚", "Ξ‘Ξ¶Ο„Ξ­ΞΊΟ‰Ξ½", "Ξ›Ξ±ΞΈΟΞ­ΞΌΟ€ΞΏΟΞΏΟ‚", "Ξ¤ΟΞ­Ξ½ΞΏ", "Ξ ΟΞµΟƒΞ²ΞµΞ―Ξ±", "ΞΞ±ΞΈΞ·Ο„Ξ®Ο‚", "Ξ”ΟΟ„Ξ·Ο‚", "Ξ Ξ¬Ξ³ΞΏΟ‚", "Ξ Ξ±ΟΞ±ΞΊΞ­Ξ½Ο„Ξ·ΟƒΞ·", "ΞΟΞ΄ΞΉΞΊΞ±Ο‚", "Ξ Ξ±Ο€ΞΏΟΟ„ΟƒΞΉ", "Ξ¥Ο€Ξ·ΟΞ­Ο„Ξ·Ο‚", "Ξ›Ξ­ΟƒΟ‡Ξ·", "Ξ£ΞµΞΉΟΞ¬", "Ξ Ο…ΟΞ±ΞΌΞ―Ξ΄Ξ±", "Ξ•Ξ½Ο„ΞΏΞΌΞΏ", "Ο€ΞΉΞ³ΞΊΞΏΟ…Ξ―Ξ½ΞΏΟ‚", "Ξ›Ξ―Ξ²ΟΞ±", "Ξ™ΞΌΞ±Ξ»Ξ¬ΞΉΞ±", "Ξ¤ΟƒΞ­Ο‡ΞΏΟ‚", "Ξ΅ΟΞΌΞ·", "ΞΞ¬Ο„ΞΉ", "Ξ£Ξ±Ξ½Ξ―Ξ΄Ξ±", "ΞΟΞµΞ²Ξ¬Ο„ΞΉ", "Ξ£Ξ·ΞΌΞµΞ―ΞΏ", "Ξ“Ξ±Ξ»Ξ»Ξ―Ξ±", "ΞΞ±ΞΌΞΏΟΞΈ", "Ξ’Ξ±ΞΌΞ²Ξ¬ΞΊΞΉ", "ΞΞΏΞΊΞΊΞΉΞ½ΞΏΞ»Ξ±Ξ―ΞΌΞ·Ο‚", "ΞΞ±ΞΈΞ±ΟΞ¬", "Ξ£Ξ¬Ξ»Ο€ΞΉΞ³Ξ³Ξ±", "Ξ£Ο†ΞµΞ½Ο„Ξ¬ΞΌΞΉ", "Ξ‘Ξ³Ξ³Ξ»Ξ―Ξ±", "Ξ ΞµΞ΄Ξ―ΞΏ", "Ξ΅ΞΏΞΌΟ€ΟΟ„", "ΞΞΉΞΊΟΟ€ΞµΞ΄ΞΏ", "Ξ‘Ο†ΟΞΉΞΊΞ®", "Ξ•Ο„ΞΉΞΊΞ­Ο„Ξ±", "Ξ£Ο„ΟΞΌΞ±", "Ξ‘ΞΊΟ„ΞΉΞ½Ξ―Ξ΄ΞΉΞ±", "ΞµΞ»ΞΉΞ¬", "Ξ£Ο‡ΞΏΞ»ΞµΞ―ΞΏ", "ΞΞµΟΞΏΟ‡ΟΟ„Ξ·Ο‚", "Ξ ΞΉΟƒΟ„ΟΞ»ΞΉ", "ΞΟ€ΞµΟΞ±", "ΞΞ­Ξ½Ο„Ξ±", "Ξ΅Ξ―Ξ¶Ξ±", "Ξ¥Ο€ΞΏ", "Ξ£Ο„Ξ­ΞΌΞΌΞ±", "Ξ Ξ―ΟƒΟ‰", "Ξ•Ο€Ξ―Ο€ΞµΞ΄ΞΏ", "ΞΞµΞΎΞΉΞΊΟ", "ΞΞ±Ξ½Ξ΄ΟΞ±Ο‚", "ΞΟΞΊΞ»ΞΏΟ‚", "Ξ”ΞΉΟƒΞΊΞ―ΞΏ", "Ξ‘Ο…ΟƒΟ„ΟΞ±Ξ»Ξ―Ξ±", "Ξ ΟΞ¬ΟƒΞΉΞ½ΞΏΟ‚", "Ξ‘Ξ―Ξ³Ο…Ο€Ο„ΞΏΟ‚", "Ξ“ΟΞ±ΞΌΞΌΞ®", "Ξ”ΞΉΞΊΞ·Ξ³ΟΟΞΏΟ‚", "ΞΞ¬Ξ³ΞΉΟƒΟƒΞ±", "Ξ‘Ξ»ΞµΞΎΞ―Ο€Ο„Ο‰Ο„ΞΏ", "Ξ”Ο…ΟƒΟ„ΟΟ‡Ξ·ΞΌΞ±", "Ξ§ΟΟ…ΟƒΟΟ‚", "Ξ£Ξ·ΞΌΞµΞ―Ο‰ΟƒΞ·", "Ξ»ΞΉΞΏΞ½Ο„Ξ¬ΟΞΉ", "Ξ Ξ»Ξ±ΟƒΟ„ΞΉΞΊΞ® ΟΞ»Ξ·", "Ξ™ΟƒΟ„ΟΟ‚", "Ξ‘ΟƒΞΈΞµΞ½ΞΏΟ†ΟΟΞΏ", "ΞΞΏΟƒΞΏΞΊΞΏΞΌΞµΞ―ΞΏ", "Ξ£Ξ·ΞΌΞ±Ξ―Ξ½Ο‰", "ΞΞ»ΞµΞΉΞ΄Ξ±ΟΞΉΞ¬", "ΞΞµΟΟ", "Ξ›ΞΏΞ½Ξ΄Ξ―Ξ½ΞΏ", "ΞΞ±Ξ¶Ξ―Ξ½ΞΏ", "ΞΟΞΊΞ»ΞΏΟ‚", "ΞΟ€Ξ±Ο", "Ξ“ΞΊΟΞµΞΌΟΟ‚", "Ξ£Ο„ΟΞΏΞ³Ξ³Ο…Ξ»Ο", "Ξ’ΟΞΌΞ²Ξ±", "Ξ“Ξ―Ξ³Ξ±Ξ½Ο„Ξ±Ο‚", "Ξ§Ξ­ΟΞΉ", "ΞΞ―Ξ½Ο„Ξ¶Ξ±", "Ξ¤ΟΞΉΞ±Ξ½Ο„Ξ¬Ο†Ο…Ξ»Ξ»ΞΏ", "Ξ“Ξ»ΞΉΟƒΟ„ΟΞ¬Ο‰", "Ξ›ΞΉΞΌΞΏΟ…Ξ¶Ξ―Ξ½Ξ±", "Ξ Ξ­ΟΞ±ΟƒΞΌΞ±", "ΞΞ­Ξ±Ο„ΟΞΏ", "Ξ Ξ»Ξ¬ΞΊΞ±", "Ξ”ΞΏΟΟ…Ο†ΟΟΞΏΟ‚", "ΞΞ­Ο„ΟƒΞ±Ο€", "ΞΞµΞ½ΞΏΞ΄ΞΏΟ‡ΞµΞΉΞΏ", "ΞΟ…ΟΞ¬", "Ξ¤ΟƒΞΉΞΌΟ€ΞΏΟΟΞΉ", "Ξ•Ξ΄Ξ±Ο†ΞΏΟ‚", "Ξ‘ΟƒΟ„Ο…Ξ½ΞΏΞΌΞ―Ξ±", "ΞΞ¬Ξ½ΞΏΟ‚", "Ξ‘Ξ½ΞµΞΌΞΉΟƒΟ„Ξ®ΟΞ±Ο‚", "Ξ¦ΟΟΞµΞΌΞ±", "ΞΟΟΞ½ΞΏΟ‚", "Ξ“ΟΞ±ΟƒΞ―Ξ΄ΞΉ", "Ξ’ΞΏΟΟΟ„ΟƒΞ±", "ΞΞ±ΟΞ­ΞΊΞ»Ξ±", "Ξ’ΟΞ¬Ο‡ΞΏΟ‚", "Ξ ΞΉΞ»ΟΟ„ΞΏΟ‚", "Ξ¤Ξ·Ξ»ΞµΟƒΞΊΟΟ€ΞΉΞΏ", "Ξ‘ΟΟ‡ΞµΞ―ΞΏ", "Ξ•ΟΞ³Ξ±ΟƒΟ„Ξ®ΟΞΉΞΏ", "Ξ™Ξ½Ξ΄Ξ―Ξ±", "ΞΟ…Ξ²ΞµΟΞ½Ξ®Ο„Ξ·Ο‚", "ΞΟΟ‡ΞΉ", "ΞΞΏΟΞ½ΞΉΞ±", "ΞΞ»Ο…ΞΌΟ€ΞΏΟ‚", "Ξ‘Ξ»Ξ»Ξ±Ξ³Ξ®", "Ξ—ΞΌΞµΟΞΏΞΌΞ·Ξ½Ξ―Ξ±", "Ξ΅ΞµΟΞΌΞ±", "Ξ’Ξ»Ξ®ΞΌΞ±", "ΞΞ»Ξ―ΞΌΞ±ΞΊΞ±", "Ξ–ΟΞ½Ξ·", "Ξ‘Ξ³Ξ³ΞµΞ»ΞΏΟ‚", "Ξ¤ΟΟ€ΞΏΟ‚", "ΞΞΏΟΟΞΏ", "ΞΞ¬ΟΟ„Ξ±", "Ξ•Ξ»ΞµΞ³Ο‡ΞΏΟ‚", "Ξ ΟΞΏΟƒΟ‡Ξ­Ξ΄ΞΉΞΏ", "ΞΞµΟ†Ξ¬Ξ»ΞΉ", "Ξ‘Ξ³ΞΊΞ±Ξ»ΞΉΞ¬", "Ξ ΞΏΟΟ„ΞΏΞΊΞ¬Ξ»ΞΉ", "Ξ Ξ±Ξ³Ο‰Ο„Ο", "Ξ¤Ξ±ΞΉΞ½Ξ―Ξ±", "Ξ΅ΞΏΞ΄Ξ­Ξ»Ξ±", "Ξ ΞΉΟƒΞ―Ξ½Ξ±", "ΞΞ±ΟΟ‡Ξ±ΟΞ―Ξ±Ο‚", "Ξ’Ξ±Ξ½", "Ξ£ΞµΞΉΟΞ¬", "ΞΞΏΟƒΟ‡Ξ¬ΟΞΉ", "Ξ“ΞµΟΞ¬ΞΊΞΉ", "Ξ‘ΞµΟ„ΟΟ‚", "Ξ’ΞµΞ»ΟΞ½Ξ±", "Ξ”Ξ¬ΟƒΞΏΟ‚", "Ξ”ΟΞ¬ΞΊΞΏΟ‚", "ΞΞ»ΞµΞΉΞ΄Ξ―", "Ξ–ΟΞ½Ξ·", "ΞΞ±Ο€Ξ¬ΞΊΞΉ", "Ξ¤ΟΟ…Ο€Ξ¬Ξ½ΞΉ", "Ξ“Ξ¬Ξ½Ο„ΞΉ", "Ξ•Ο€ΞΉΞΊΟΞ»Ξ»Ξ·ΟƒΞ·", "Ξ Ο„ΟΟƒΞ·", "Ξ¦Ο‰Ο„ΞΉΞ¬", "Ξ‘ΟΞ¬Ο‡Ξ½Ξ·", "Ξ£Ξ ΞΞΞ”Ξ¥Ξ›Ξ™ΞΞ— Ξ£Ξ¤Ξ—Ξ›Ξ—", "Ξ£Ο„ΟΞ±Ο„ΞΉΟΟ„Ξ·Ο‚", "ΞΞ­ΟΞ±Ο„ΞΏ", "Ξ’Ξ±ΟƒΞ―Ξ»ΞΉΟƒΟƒΞ±", "Ξ–Ξ±ΞΌΟ€ΟΞ½", "Ξ£ΞΊΞΏΟ…Ο€Ξ―Ξ΄ΞΉΞ±", "Ξ–Ξ©Ξ—", "Ξ½Ξ±ΟΟ‚", "ΞΞΏΟ…Ξ½Ξ­Ξ»ΞΉ", "ΞΞΏΟ…ΞΌΟ€Ξ―", "Ξ Ξ±ΞΉΟ‡Ξ½Ξ―Ξ΄ΞΉ", "Ξ‘ΟƒΟ„Ξ­ΟΞΉ", "Ξ–ΞµΟΟ‚", "ΞΟ„Ξ·Ξ½Ξ―Ξ±Ο„ΟΞΏΟ‚", "ΞΟΟ‡Ο„Ξ±", "Ξ‘Ξ­ΟΞ±Ο‚", "ΞΟ€Ξ±Ο„Ξ±ΟΞ―Ξ±", "Ξ™Ξ΄ΞΉΞΏΟ†Ο…Ξ―Ξ±", "ΞΞ±Ο„Ξ¬ΟƒΟ„Ξ·ΞΌΞ±", "ΞΟ€ΞΏΟ…ΞΊΞ¬Ξ»ΞΉ", "Ξ£Ο„Ξ¬Ξ΄ΞΉΞΏ", "Ξ•ΞΎΟ‰Ξ³Ξ®ΞΉΞ½ΞΏ", "Ξ¦Ο‰Ο‚", "Ξ¤ΟΞ―Ξ³Ο‰Ξ½ΞΏ", "Ξ›ΞµΞΌΟΞ½ΞΉ", "ΞΞΏΟƒΞΏΞΊΟΞΌΞ±", "Ξ Ο„ΟΟƒΞ·", "Ξ Ξ―ΟƒΟ„Ξ±", "Ξ¤ΟΞ¬Ο€ΞµΞ¶Ξ±", "Ξ“ΞµΟΞΌΞ±Ξ½Ξ―Ξ±", "Ξ£ΞΊΞΏΟ…Ξ»Ξ®ΞΊΞΉ", "Ξ±ΞΊΟ„Ξ―Ξ½Ξ±", "ΞΞµΟ†Ξ¬Ξ»Ξ±ΞΉΞΏ", "Ξ‘Ο€ΞµΟΞ³Ξ―Ξ±", "Ξ ΟΞ»ΞµΞΌΞΏΟ‚", "Ξ£Ο…Ξ½Ξ±Ο…Ξ»Ξ―Ξ±", "ΞΞ­Ξ»ΞΉ", "ΞΞ±Ξ½Ξ±Ξ΄Ξ¬Ο‚", "Ξ•Ξ»Ξ¬Ο†ΞΉ", "Ξ§ΞΉΞΏΞ½Ξ¬Ξ½ΞΈΟΟ‰Ο€ΞΏΟ‚", "Ξ΅Ο…ΞΈΞΌΟΟ‚", "ΞΞ±ΟΞΌΞµΞ»Ξ¬Ξ΄Ξ±", "Ξ§Ξ±Ξ»ΞΊΟΟ‚", "Ξ Ξ±ΟΞ±Ξ»Ξ―Ξ±", "ΞΞΏΟ…Ξ΄ΞΏΟΞ½ΞΉ", "ΞΞ±Ξ»Ξ»ΞΉΞΊΞ¬Ο„Ξ¶Ξ±ΟΞΏΟ‚", "Ξ¦ΞΏΞ―Ξ½ΞΉΞΊΞ±Ο‚", "Ξ”ΟΞ½Ξ±ΞΌΞ·", "ΞΞµΟΞ±Ξ―Ξ±", "Ξ ΞΉΟΞΏΟΞ½ΞΉ", "Ξ†Ξ»Ο€ΞµΞΉΟ‚", "ΞΞ­ΟƒΞ·", "Ξ¦ΟΞ¬ΞΊΟ„Ξ·Ο‚", "ΞΞ±Ξ³ΞΊΞΏΟ…ΟΟ", "Ξ ΞΏΞ½Ο„Ξ―ΞΊΞΉ", "ΞΞΏΟΟ€Ξ±", "Ο€Ξ­Ο„Ξ±Ξ»ΞΏ", "Ξ£ΞΊΞΏΟΟ€ΞΉΟΟ‚", "Ξ ΟΞ¬ΞΊΟ„ΞΏΟΞ±Ο‚", "Ξ•Ξ»ΞΉΞΊΟΟ€Ο„ΞµΟΞΏ", "Ξ¤ΟΟΟ€Ξ±", "ΞΟΞ³Ξ±Ξ½ΞΏ", "Ξ“ΟΟΞ»ΞΏΟ‚", "Ξ§ΟΞ­Ο‰ΟƒΞ·"];
      var people_list = ["Kobe Bryant", "Robert Downey Jr.", "Madonna", "Michael Jackson", "Jean-Claude Van Damme", "Tony Hawk", "Lionel Messi", "Beyonce", "Jackie Chan", "Kate Winslet", "Channing Tatum", "Ewan McGregor", "Orlando Bloom", "Harrison Ford", "Jack Black", "Jet Li", "Mariah Carey", "Queen Latifah", "Charles Chaplin", "Bruce Springsteen", "Keanu Reeves", "Marlon Brando", "Bill Clinton", "Johnny Depp", "Samuel L. Jackson", "Paula Deen", "Clint Eastwood", "Mark Wahlberg", "Oprah Winfrey", "Tom Cruise", "Liam Neeson", "James Earl Jones", "Jonathan Taylor Thomas", "LeBron James", "Reese Witherspoon", "Ben Stiller", "Rachel McAdams", "Heath Ledger", "Kevin Spacey", "Andrew Lloyd Webber", "Eddie Murphy", "Elijah Wood", "Macaulay Culkin", "Rush Limbaugh", "John Travolta", "Arnold Schwarzenegger", "Cristiano Ronaldo", "Steve Martin", "Bill Murray", "Keira Knightley", "Mary-Kate and Ashley Olsen", "Donald Trump", "NSYNC", "Peyton Manning", "Will Ferrell", "Ellen DeGeneres", "Taylor Swift", "U2", "Penn & Teller", "Carrie Fisher", "Hugh Jackman", "Sandra Bullock", "Stephen King", "Russell Crowe", "The Rolling Stones", "Bruce Willis", "Whoopi Goldberg", "Will Smith", "Cameron Diaz", "Tom Hiddleston", "Jimmy Fallon", "Matt Damon", "Eminem", "Drew Barrymore", "Michael Phelps", "Celine Dion", "Owen Wilson", "Mark Zuckerberg", "Bill Gates", "Jennifer Aniston", "Daniel Craig", "Antonio Banderas", "Julia Roberts", "Robin Williams", "Mandy Moore", "James Taylor", "Emma Watson", "Neil Diamond", "Lady Gaga", "Backstreet Boys", "Dan Brown", "John Williams", "Amanda Bynes", "Nicolas Cage", "Weird Al Yankovick", "Danny Glover", "Ellen DeGeneres", "Barack Obama", "Britney Spears", "the Beatles", "Batman", "Bugs Bunny", "Fix-It Felix", "Po the panda", "Wonder Woman", "Pac-Man", "Forrest Gump", "Ramona Quimby", "Spider-Man", "Tinker Bell", "Charlotte the spider", "the Incredible Hulk", "Legolas", "Calvin (and Hobbes)", "Goofy", "Jar Jar Binks", "Mother Goose", "Burton 'Gus' Guster", "Captain Jack Sparrow", "Bilbo Baggins", "Anne of Green Gables", "Fozzy", "Captain Hook", "Danny Ocean", "Waldo", "Indiana Jones", "Gonzo", "the Lorax", "Peter Pan", "Piglet", "Hermione Granger", "Moby Dick", "Spock", "Elmo", "Nemo", "Napoleon Dynamite", "Clifford the Big Red Dog", "Corduroy Bear", "Ronald McDonald", "Alice (in Wonderland)", "Cap'n Crunch", "Jason Bourne", "Superman", "Rocky", "Snow White", "the Wizard of Oz", "the Big Friendly Giant", "Charlie Brown", "Mulan", "Ebenezer Scrooge", "Han Solo", "Gaston", "Pikachu", "the Beast", "Willy Wonka", "Princess Leia", "Toucan Sam", "Fred Flintstone", "SpongeBob SquarePants", "Lando Calrissian", "Rapunzel", "Peeta Mellark", "Cinderella", "Lightning McQueen", "Sid the sloth", "Katniss Everdeen", "Buffy Summers", "Johnny Bravo", "Mr. Peabody", "Garfield", "the Tin Man", "Severus Snape", "Obi-Wan Kenobi", "Link from Zelda", "Wreck-It Ralph", "Miss Piggy", "Samwise Gamgee", "Mary Poppins", "Donald Duck", "President Josiah 'Jed' Bartlet", "Prince Charming", "Tron", "Darth Vader", "Elsa", "Mario", "Jean Valjean", "Lorelai Gilmore", "Alvin and the Chipmunks", "the Cat in the Hat", "Clark Kent", "the Mad Hatter", "Bambi", "Captain America", "Tigger", "Stitch", "Daniel Tiger", "Frog and Toad", "Paddington Bear", "Lord Voldermort", "Big Bird", "Ludwig van Beethoven", "Joan of Arc", "Samuel Morse", "Steve Jobs", "Audrey Hepburn", "Betsy Ross", "James Cook", "Pablo Picasso", "Anne Frank", "Ronald Reagan", "Walter Cronkite", "John Calvin", "Genghis Khan", "Patrick Henry", "Mother Teresa", "John Hancock", "Fred Rogers", "Herbert Hoover", "Marie Curie", "Cleopatra", "Elizabeth I of England", "John Adams", "Adolf Hitler", "Julius Caesar", "Claude Monet", "Aristotle", "Leonardo da Vinci", "Elvis Presley", "Eli Whitney", "Harriet Tubman", "Rosa Parks", "Norman Rockwell", "George W. Carver", "Alexander the Great", "the Wright Brothers", "C. S. Lewis", "Vincent van Gogh", "Winston Churchill", "John Locke", "Frederick Douglass", "Plato", "Martin Luther King, Jr.", "Henry VIII of England", "Lewis and Clark", "Franklin D. Roosevelt", "Galileo Galilei", "Joseph Stalin", "Alexander Graham Bell", "Harry Houdini", "Jackson Pollock", "Ernest Hemingway", "Nathaniel Hawthorne", "Theodore Roosevelt", "Amelia Earhart", "Samuel Adams", "Sigmund Freud", "Louis Armstrong", "Nelson Mandela", "Charles Dickens", "Benjamin Franklin", "Beethoven", "Pope John Paul II", "Napoleon Bonaparte", "Socrates", "Simon Bolivar", "Immanuel Kant", "Lewis Carrol", "Eleanor Roosevelt", "Thomas Edison", "Edgar Allan Poe", "Lord Byron", "Queen Victoria", "Mohammad Ali", "Billy the Kid", "Richard Nixon", "Lucille Ball", "Andy Warhol", "Babe Ruth", "Voltaire", "Michelangelo", "Woodrow Wilson", "Davy Crockett", "Ulysses S. Grant", "Nikola Tesla", "Mahatma Gandhi", "Grover Cleveland", "Dwight D. Eisenhower", "Walt Disney", "Francis Bacon", "Sir Isaac Newton", "Copernicus", "Alexander Hamilton", "George Washington", "Jimmy Stewart", "Victor Hugo", "William Shakespeare", "Henry Ford", "King Arthur", "Wolfgang Amadeus Mozart", "Abraham Lincoln"];
      var word_lists = {
        'en': english_words,
        'pl': polish_words,
        'el': greek_words,
        'ppl': people_list
      }

      function shuffled_array(arr) {
        arr = arr.slice();
        for (var i = arr.length - 1; i >= 1; --i) {
          var j = getRandomInt(0, i + 1);
          var temp = arr[i];
          arr[i] = arr[j]
          arr[j] = temp;
        }
        return arr;
      }

      function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive
      }

      function getRemaining(c) {
        var res = 0;
        for (var idx = 0; idx < game.num_rows * game.num_cols; idx += 1) {
          if (!game.revealed[idx] && game.type[idx] == c) {
            res += 1;
          }
        }
        return res;
      }

      function render() {
        var game_ui = $("#game");
        game_ui.html("");
        if (game.error) {
          var p = $('<p class="lead" \>');
          p.html(game.error);
          game_ui.append(p);
        } else {
          table = $('<table class="cards" />');
          $('#spymaster-li').removeClass();
          if (game.allrevealed) {
            $('#spymaster-li').addClass("active");
          }
          for (var i = 0; i < game.num_rows; i += 1) {
            var row = $("<tr>")
            for (var j = 0; j < game.num_cols; j += 1) {
              var idx = i * game.num_cols + j;
              var cell = $("<td>")
              cell.addClass("cell");
              if (game.revealed[idx] || game.allrevealed) {
                cell.addClass("cell-revealed");
                if (game.type[idx] === "r") {
                  cell.addClass("cell-red");
                } else if (game.type[idx] === "b") {
                  cell.addClass("cell-blue");
                } else if (game.type[idx] === "n") {
                  cell.addClass("cell-neutral");
                } else if (game.type[idx] === "e") {
                  cell.addClass("cell-end");
                }
                if (game.revealed[idx] && game.allrevealed) {
                  cell.addClass("cell-strike");
                }
              } else {
                cell.addClass("cell-inrevealed");
              }
              cell.click(function(inner) {
                return function() {
                  toggle_reveal(inner);
                }
              }(idx));
              cell.on('touchend', function(inner) {
                return function() {
                  toggle_reveal(inner);
                }
              }(idx));
              var word = $("<span>");

              word.text(game.words[idx])
              word.addClass("cell-text")
              cell.append(word);
              row.append(cell);
            }
            table.append(row);

          }
          game_ui.append(table);
          $('#red-left').text(getRemaining("r"));
          $('#blue-left').text(getRemaining("b"));
        }
        sessionStorage.setItem("game", JSON.stringify(game));
      }

      function toggle_reveal(idx) {
        game.revealed[idx] = !game.revealed[idx];
        render();
      }

      function toggle_spymaster() {
        game.allrevealed = !game.allrevealed;
        render();
      }

      function set_from_seed() {
        var seed = $('#seed').val().split('-', 2);
        sessionStorage.setItem("seed", JSON.stringify($('#seed').val()));

        game.error = null;
        if (seed.length != 2) {
          game.error = "Seed must be of form <mark>lang</mark>-<mark>phrase</mark>, where <mark>lang</mark> is the language and <mark>phrase</mark> defines the board.";
          render();
          return;
        }
        var lang = seed[0];
        var seed = seed[1];
        if (!word_lists[lang]) {
          game.error = "Language must be one of " + Object.keys(word_lists).sort().join(', ') + ".";
          render();
          return;
        }
        allwords = word_lists[lang];

        Math.seedrandom($('#seed').val());

        total = game.num_rows * game.num_cols;
        nthings = Math.floor(total / 3);
        game.type = [];
        for (var i = 0; i < nthings; i += 1) {
          game.type.push("r");
          game.type.push("b");
        }
        if (getRandomInt(0, 2) === 0) {
          game.type.push("r");
        } else {
          game.type.push("b");
        }
        game.type.push("e");
        for (var i = 0; i < total - (2 * nthings + 2); i += 1) {
          game.type.push("n");
        }
        game.type = shuffled_array(game.type);

        game.revealed = [];
        for (var idx = 0; idx < game.num_rows * game.num_cols; idx += 1) {
          game.revealed.push(0);
        }
        game.words = shuffled_array(allwords).slice(0, total);
        render();
      }

      alphabet = "abcdefghijklmnopqrstuvwxyz"

      function int_to_string(seed) {
        var res = "";
        while (seed > 0) {
          res += alphabet[seed % alphabet.length];
          seed = Math.floor(seed / alphabet.length);
        }
        return res;
      }

      function reset(event) {
        var lang = "en";
        if (event) {
          lang = $(event.toElement).attr("data-language");
        }
        console.log(lang);
        Math.seedrandom();
        seed = getRandomInt(0, 1e9);
        seed_str = lang + "-" + int_to_string(seed);
        $('#seed').val(seed_str);
        set_from_seed();
      }

      $(document).ready(function() {
        if (!('ontouchstart' in document.documentElement)) {
          $('[data-toggle="tooltip"]').tooltip();
        }
        $("#spymaster").click(toggle_spymaster);
        $(".reset-button").click(reset);
        $("#seed").val(seed);
        $("#seed").keyup(set_from_seed);

        if (sessionStorage.getItem("game")) {
          seed = JSON.parse(sessionStorage.getItem("seed"));
          $('#seed').val(seed);
          game = JSON.parse(sessionStorage.getItem("game"));
          render();
        } else {
          reset();
        }
      });

    </script>
    <script>
      (function(i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function() {
          (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date();
        a = s.createElement(o),
          m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
      })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
      ga('create', 'UA-102294427-1', 'auto');
      ga('send', 'pageview');

    </script>

    <script>
      function setStyleSource(linkID, sourceLoc) {
        var theLink = document.getElementById(linkID);
        theLink.href = sourceLoc;
        console.log(theLink.href);
      }

      document.getElementById("mySelect").addEventListener("change", function() {
        var selected = this.options[this.selectedIndex].value;
        setStyleSource("s1", selected)
      });

    </script>
  </body>

</html>
